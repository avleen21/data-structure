/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* reverse(struct ListNode* head){
    struct ListNode* prev = NULL;
    struct ListNode* curr = head;
    struct ListNode* next = NULL;

    while(curr != NULL){
        next = curr->next;
        curr->next = prev;
        prev = curr;
        curr = next;
    }
    return prev;
}

int pairSum(struct ListNode* head) {
    struct ListNode* slow = head;
    struct ListNode* fast = head;

    while(fast != NULL && fast->next != NULL){
        slow = slow->next;
        fast = fast->next->next;
    }

    struct ListNode* second = reverse(slow);
    struct ListNode* first = head;

    int maxSum = 0;
    while(second != NULL){
        int sum = first->val + second->val;
        if(sum > maxSum){
            maxSum = sum;
        }
        first = first->next;
        second = second->next;
    }
    return maxSum;
}
